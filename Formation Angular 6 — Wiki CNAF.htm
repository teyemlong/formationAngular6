<!DOCTYPE HTML>
<!-- saved from url=(0055)http://10.24.217.233/wiki/index.php/Formation_Angular_6 -->
<!DOCTYPE html PUBLIC "" ""><HTML class="client-nojs" lang="fr" 
dir="ltr"><HEAD><META content="IE=11.0000" http-equiv="X-UA-Compatible">
 
<META charset="UTF-8"> <TITLE>Formation Angular 6 — Wiki CNAF</TITLE> 
<SCRIPT>document.documentElement.className = document.documentElement.className.replace( /(^|\s)client-nojs(\s|$)/, "$1client-js$2" );</SCRIPT>
 
<SCRIPT>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgCanonicalNamespace":"","wgCanonicalSpecialPageName":false,"wgNamespaceNumber":0,"wgPageName":"Formation_Angular_6","wgTitle":"Formation Angular 6","wgCurRevisionId":2261,"wgRevisionId":2261,"wgArticleId":401,"wgIsArticle":true,"wgIsRedirect":false,"wgAction":"view","wgUserName":null,"wgUserGroups":["*"],"wgCategories":["Pages avec des erreurs de coloration syntaxique"],"wgBreakFrames":false,"wgPageContentLanguage":"fr","wgPageContentModel":"wikitext","wgSeparatorTransformTable":[",\t."," \t,"],"wgDigitTransformTable":["",""],"wgDefaultDateFormat":"dmy","wgMonthNames":["","janvier","février","mars","avril","mai","juin","juillet","août","septembre","octobre","novembre","décembre"],"wgMonthNamesShort":["","janv.","fév.","mars","avr.","mai","juin","juill.","août","sept.","oct.","nov.","déc."],"wgRelevantPageName":"Formation_Angular_6","wgRelevantArticleId":401,"wgRequestId":"b8b03d37218eabba9bf1693f","wgIsProbablyEditable":false,"wgRelevantPageIsProbablyEditable":false,"wgRestrictionEdit":[],"wgRestrictionMove":[],"wgVisualEditor":{"pageLanguageCode":"fr","pageLanguageDir":"ltr","pageVariantFallbacks":"fr","usePageImages":false,"usePageDescriptions":false},"wgWikiEditorEnabledModules":{"toolbar":true,"preview":false,"publish":false},"wgVisualEditorToolbarScrollOffset":0,"wgVisualEditorUnsupportedEditParams":["undo","undoafter","veswitched"],"wgEditSubmitButtonLabelPublish":false});mw.loader.state({"site.styles":"ready","noscript":"ready","user.styles":"ready","user":"ready","user.options":"loading","user.tokens":"loading","ext.pygments":"ready","ext.visualEditor.desktopArticleTarget.noscript":"ready","mediawiki.skinning.content.externallinks":"ready","skins.timeless":"ready","skins.timeless.misc":"ready","mediawiki.legacy.shared":"ready","mediawiki.legacy.commonPrint":"ready","mediawiki.sectionAnchor":"ready"});mw.loader.implement("user.options@1pd8f5v",function($,jQuery,require,module){mw.user.options.set({"variant":"fr"});});mw.loader.implement("user.tokens@0daz5b1",function ( $, jQuery, require, module ) {
mw.user.tokens.set({"editToken":"+\\","patrolToken":"+\\","watchToken":"+\\","csrfToken":"+\\"});/*@nomin*/

});mw.loader.load(["site","mediawiki.page.startup","mediawiki.user","mediawiki.hidpi","mediawiki.page.ready","mediawiki.toc","mediawiki.searchSuggest","ext.visualEditor.desktopArticleTarget.init","ext.visualEditor.targetLoader","skins.timeless.js","skins.timeless.mobile"]);});</SCRIPT>
 <LINK href="Formation%20Angular%206%20—%20Wiki%20CNAF_fichiers/load.css" rel="stylesheet"> 
<SCRIPT src="Formation%20Angular%206%20—%20Wiki%20CNAF_fichiers/load.js" async=""></SCRIPT>
 
<META name="ResourceLoaderDynamicStyles" content=""> 
<META name="GENERATOR" content="MSHTML 11.00.10570.1001"> 
<META name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes, minimum-scale=0.25, maximum-scale=5.0"> 
<LINK href="./favicon.ico" rel="shortcut icon"> <LINK title="Wiki CNAF (fr)" 
href="/wiki/opensearch_desc.php" rel="search" type="application/opensearchdescription+xml"> 
<LINK href="http://10.24.217.233/wiki/api.php?action=rsd" rel="EditURI" type="application/rsd+xml"> 
<LINK title="Flux Atom de Wiki CNAF" href="/wiki/index.php?title=Sp%C3%A9cial:Modifications_r%C3%A9centes&amp;feed=atom" 
rel="alternate" type="application/atom+xml"> <!--[if lt IE 9]><script src="/resources/lib/html5shiv/html5shiv.min.js"></script><![endif]--> 
</HEAD> 
<BODY class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject page-Formation_Angular_6 rootpage-Formation_Angular_6 skin-timeless action-view">
<DIV id="mw-wrapper">
<DIV class="ts-container" id="mw-header-container">
<DIV class="ts-inner" id="mw-header">
<DIV id="user-tools">
<DIV id="personal">
<H2><SPAN>Anonyme</SPAN>
<DIV class="pokey"></DIV></H2>
<DIV class="dropdown" id="personal-inner">
<DIV class="mw-portlet" id="p-personal" role="navigation" aria-labelledby="p-personal-label">
<H3 id="p-personal-label" lang="fr" dir="ltr">Non connecté(e)</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI id="pt-createaccount"><A title="Vous êtes encouragé à créer un compte utilisateur et vous connecter; ce n’est cependant pas obligatoire." 
  href="http://10.24.217.233/wiki/index.php?title=Sp%C3%A9cial:Cr%C3%A9er_un_compte&amp;returnto=Formation+Angular+6"><SPAN>Créer 
  un compte</SPAN></A></LI>
  <LI id="pt-login"><A title="Vous êtes encouragé à vous connecter ; ce n’est cependant pas obligatoire. [o]" 
  accesskey="o" href="http://10.24.217.233/wiki/index.php?title=Sp%C3%A9cial:Connexion&amp;returnto=Formation+Angular+6"><SPAN>Se 
  connecter</SPAN></A></LI></UL></DIV></DIV></DIV></DIV></DIV>
<DIV class="mw-portlet" id="p-logo-text" role="banner"><A class="mw-wiki-title" 
id="p-banner" href="http://10.24.217.233/wiki/index.php/Accueil">Wiki 
CNAF</A></DIV>
<DIV class="mw-portlet" id="p-search">
<H3 lang="fr" dir="ltr"><LABEL for="searchInput">Rechercher</LABEL></H3>
<FORM id="searchform" action="/wiki/index.php">
<DIV id="simpleSearch">
<DIV id="searchInput-container"><INPUT name="search" title="Rechercher dans Wiki CNAF [f]" id="searchInput" accesskey="f" type="search" placeholder="Rechercher dans Wiki CNAF" value=""></DIV><INPUT name="title" type="hidden" value="Spécial:Recherche"><INPUT name="fulltext" title="Rechercher les pages comportant ce texte." class="searchButton mw-fallbackSearchButton" id="mw-searchButton" type="submit" value="Rechercher"><INPUT name="go" title="Accédez à une page du même nom si elle existe" class="searchButton" id="searchButton" type="submit" value="Continuer"></DIV></FORM></DIV></DIV>
<DIV class="visualClear"></DIV></DIV>
<DIV class="color-bar" id="mw-header-hack">
<DIV class="color-middle-container">
<DIV class="color-middle"></DIV></DIV>
<DIV class="color-left"></DIV>
<DIV class="color-right"></DIV></DIV>
<DIV id="mw-header-nav-hack">
<DIV class="color-bar">
<DIV class="color-middle-container">
<DIV class="color-middle"></DIV></DIV>
<DIV class="color-left"></DIV>
<DIV class="color-right"></DIV></DIV></DIV>
<DIV id="menus-cover"></DIV>
<DIV class="ts-container" id="mw-content-container">
<DIV class="ts-inner" id="mw-content-block">
<DIV id="mw-content-wrapper">
<DIV id="mw-content">
<DIV class="mw-body" id="content" role="main">
<DIV class="mw-indicators mw-body-content"></DIV>
<H1 class="firstHeading" id="firstHeading">Formation Angular 6</H1>
<DIV id="siteSub">De Wiki CNAF</DIV>
<DIV id="mw-page-header-links">
<DIV class="mw-portlet" id="p-namespaces" role="navigation" aria-labelledby="p-namespaces-label">
<H3 id="p-namespaces-label" lang="fr" dir="ltr">Espaces de noms</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI class="selected" id="ca-nstab-main"><A title="Voir le contenu de la page [c]" 
  accesskey="c" 
  href="http://10.24.217.233/wiki/index.php/Formation_Angular_6"><SPAN>Page</SPAN></A></LI>
  <LI class="new" id="ca-talk"><A title="Discussion au sujet de cette page de contenu [t]" 
  accesskey="t" href="http://10.24.217.233/wiki/index.php?title=Discussion:Formation_Angular_6&amp;action=edit&amp;redlink=1" 
  rel="discussion"><SPAN>Discussion</SPAN></A></LI></UL></DIV></DIV>
<DIV class="mw-portlet" id="p-more" role="navigation" aria-labelledby="p-more-label">
<H3 id="p-more-label" lang="fr" dir="ltr">Plus</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI class="dropdown-toggle" id="ca-more"><SPAN>Plus</SPAN></LI></UL></DIV></DIV>
<DIV class="mw-portlet" id="p-views" role="navigation" aria-labelledby="p-views-label">
<H3 id="p-views-label" lang="fr" dir="ltr">Actions de page</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI class="selected" id="ca-view"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6" 
  redundant="1"><SPAN>Lire</SPAN></A></LI>
  <LI id="ca-viewsource"><A title="Cette page est protégée.&#10;Vous pouvez toutefois en visualiser la source. [e]" 
  accesskey="e" href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;action=edit"><SPAN>Voir 
  le texte source</SPAN></A></LI>
  <LI id="ca-history"><A title="Historique des versions de cette page [h]" 
  accesskey="h" href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;action=history"><SPAN>Historique</SPAN></A></LI></UL></DIV></DIV></DIV>
<DIV class="visualClear"></DIV>
<DIV class="mw-body-content" id="bodyContent">
<DIV id="contentSub"></DIV>
<DIV class="mw-content-ltr" id="mw-content-text" lang="fr" dir="ltr">
<DIV class="mw-parser-output">
<DIV class="toc" id="toc">
<DIV class="toctitle">
<H2>Sommaire</H2></DIV>
<UL>
  <LI class="toclevel-1 tocsection-1"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Introduction"><SPAN 
  class="tocnumber">1</SPAN> <SPAN class="toctext">Introduction</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-2"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#WebComponents"><SPAN 
    class="tocnumber">1.1</SPAN> <SPAN 
    class="toctext">WebComponents</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-3"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ReactiveX"><SPAN 
    class="tocnumber">1.2</SPAN> <SPAN class="toctext">ReactiveX</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-4"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Principe_des_observables"><SPAN 
      class="tocnumber">1.2.1</SPAN> <SPAN class="toctext">Principe des 
      observables</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-5"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Fonctions_principales"><SPAN 
      class="tocnumber">1.2.2</SPAN> <SPAN class="toctext">Fonctions 
      principales</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-6"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#obs.create"><SPAN 
        class="tocnumber">1.2.2.1</SPAN> <SPAN 
        class="toctext">obs.create</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-7"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#obs.from"><SPAN 
        class="tocnumber">1.2.2.2</SPAN> <SPAN 
        class="toctext">obs.from</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-8"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#obs.subscribe"><SPAN 
        class="tocnumber">1.2.2.3</SPAN> <SPAN 
        class="toctext">obs.subscribe</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-9"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Firebase"><SPAN 
    class="tocnumber">1.3</SPAN> <SPAN class="toctext">Firebase</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-10"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Compodoc"><SPAN 
    class="tocnumber">1.4</SPAN> <SPAN class="toctext">Compodoc</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-11"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Agilit.C3.A9"><SPAN 
    class="tocnumber">1.5</SPAN> <SPAN class="toctext">Agilité</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-12"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#M.C3.A9thode_Agile"><SPAN 
      class="tocnumber">1.5.1</SPAN> <SPAN class="toctext">Méthode 
      Agile</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-13"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Conception_Agile"><SPAN 
      class="tocnumber">1.5.2</SPAN> <SPAN class="toctext">Conception 
      Agile</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-14"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ECMA_Script_5"><SPAN 
    class="tocnumber">1.6</SPAN> <SPAN class="toctext">ECMA Script 5</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-15"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Arrow_functions"><SPAN 
      class="tocnumber">1.6.1</SPAN> <SPAN class="toctext">Arrow 
      functions</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-16"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#this"><SPAN 
      class="tocnumber">1.6.2</SPAN> <SPAN class="toctext">this</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-17"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#let"><SPAN 
      class="tocnumber">1.6.3</SPAN> <SPAN class="toctext">let</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-18"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#decorators"><SPAN 
      class="tocnumber">1.6.4</SPAN> <SPAN 
      class="toctext">decorators</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-19"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#spread_operator"><SPAN 
      class="tocnumber">1.6.5</SPAN> <SPAN class="toctext">spread 
      operator</SPAN></A></LI></UL></LI></UL></LI>
  <LI class="toclevel-1 tocsection-20"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Poste_de_dev"><SPAN 
  class="tocnumber">2</SPAN> <SPAN class="toctext">Poste de dev</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-21"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Applications_.C3.A0_installer"><SPAN 
    class="tocnumber">2.1</SPAN> <SPAN class="toctext">Applications à 
    installer</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-22"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Visual_Studio_Code"><SPAN 
    class="tocnumber">2.2</SPAN> <SPAN class="toctext">Visual Studio 
    Code</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-23"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Installation_des_plugins"><SPAN 
      class="tocnumber">2.2.1</SPAN> <SPAN class="toctext">Installation des 
      plugins</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-24"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#User_settings"><SPAN 
      class="tocnumber">2.2.2</SPAN> <SPAN class="toctext">User 
      settings</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-25"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Getting_Started"><SPAN 
      class="tocnumber">2.2.3</SPAN> <SPAN class="toctext">Getting 
      Started</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-26"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Angular.2FCLI"><SPAN 
        class="tocnumber">2.2.3.1</SPAN> <SPAN 
        class="toctext">Angular/CLI</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-27"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ng-Bootstrap"><SPAN 
        class="tocnumber">2.2.3.2</SPAN> <SPAN 
        class="toctext">ng-Bootstrap</SPAN></A></LI></UL></LI></UL></LI></UL></LI>
  <LI class="toclevel-1 tocsection-28"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Angular:_les_bases"><SPAN 
  class="tocnumber">3</SPAN> <SPAN class="toctext">Angular: les bases</SPAN></A> 
  <UL>
    <LI class="toclevel-2 tocsection-29"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Services_Angular"><SPAN 
    class="tocnumber">3.1</SPAN> <SPAN class="toctext">Services 
    Angular</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-30"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Decorators_2"><SPAN 
    class="tocnumber">3.2</SPAN> <SPAN 
class="toctext">Decorators</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-31"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Enum.C3.A9rations"><SPAN 
    class="tocnumber">3.3</SPAN> <SPAN 
    class="toctext">Enumérations</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-32"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Directives"><SPAN 
    class="tocnumber">3.4</SPAN> <SPAN class="toctext">Directives</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-33"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Directives_de_structure"><SPAN 
      class="tocnumber">3.4.1</SPAN> <SPAN class="toctext">Directives de 
      structure</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-34"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Directives_d.27attribut"><SPAN 
      class="tocnumber">3.4.2</SPAN> <SPAN class="toctext">Directives 
      d'attribut</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-35"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Directives_de_component"><SPAN 
      class="tocnumber">3.4.3</SPAN> <SPAN class="toctext">Directives de 
      component</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-36"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Routeur_Angular"><SPAN 
    class="tocnumber">3.5</SPAN> <SPAN class="toctext">Routeur 
    Angular</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-37"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Routing"><SPAN 
      class="tocnumber">3.5.1</SPAN> <SPAN 
      class="toctext">Routing</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-38"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Nested_routing"><SPAN 
      class="tocnumber">3.5.2</SPAN> <SPAN class="toctext">Nested 
      routing</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-39"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Retourner_.C3.A0_une_route_parent"><SPAN 
      class="tocnumber">3.5.3</SPAN> <SPAN class="toctext">Retourner à une route 
      parent</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-40"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#LazyLoading"><SPAN 
      class="tocnumber">3.5.4</SPAN> <SPAN 
      class="toctext">LazyLoading</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-41"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Preloading"><SPAN 
      class="tocnumber">3.5.5</SPAN> <SPAN 
      class="toctext">Preloading</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-42"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Injector"><SPAN 
    class="tocnumber">3.6</SPAN> <SPAN class="toctext">Injector</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-43"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Organisation_des_projets_Angular.2FCLI"><SPAN 
    class="tocnumber">3.7</SPAN> <SPAN class="toctext">Organisation des projets 
    Angular/CLI</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-44"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Typescript"><SPAN 
    class="tocnumber">3.8</SPAN> <SPAN 
class="toctext">Typescript</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-45"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Compilation"><SPAN 
    class="tocnumber">3.9</SPAN> <SPAN class="toctext">Compilation</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-46"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Limites_de_TS"><SPAN 
      class="tocnumber">3.9.1</SPAN> <SPAN class="toctext">Limites de 
      TS</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-47"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Build_et_lancement"><SPAN 
      class="tocnumber">3.9.2</SPAN> <SPAN class="toctext">Build et 
      lancement</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-48"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Modules"><SPAN 
    class="tocnumber">3.10</SPAN> <SPAN class="toctext">Modules</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-49"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#declarations"><SPAN 
      class="tocnumber">3.10.1</SPAN> <SPAN 
      class="toctext">declarations</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-50"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#imports"><SPAN 
      class="tocnumber">3.10.2</SPAN> <SPAN 
      class="toctext">imports</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-51"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#providers.2Fproviding"><SPAN 
      class="tocnumber">3.10.3</SPAN> <SPAN 
      class="toctext">providers/providing</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-52"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#bootstrap"><SPAN 
      class="tocnumber">3.10.4</SPAN> <SPAN 
      class="toctext">bootstrap</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-53"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Pipe"><SPAN 
    class="tocnumber">3.11</SPAN> <SPAN class="toctext">Pipe</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-54"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Directives_2"><SPAN 
    class="tocnumber">3.12</SPAN> <SPAN 
    class="toctext">Directives</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-55"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Gestion_des_chaines_de_charact.C3.A8res"><SPAN 
    class="tocnumber">3.13</SPAN> <SPAN class="toctext">Gestion des chaines de 
    charactères</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-56"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Component"><SPAN 
    class="tocnumber">3.14</SPAN> <SPAN class="toctext">Component</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-57"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Containers"><SPAN 
      class="tocnumber">3.14.1</SPAN> <SPAN 
      class="toctext">Containers</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-58"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Passer_des_donn.C3.A9es_entre_components"><SPAN 
        class="tocnumber">3.14.1.1</SPAN> <SPAN class="toctext">Passer des 
        données entre components</SPAN></A> 
        <UL>
          <LI class="toclevel-5 tocsection-59"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Via_NgClass"><SPAN 
          class="tocnumber">3.14.1.1.1</SPAN> <SPAN class="toctext">Via 
          NgClass</SPAN></A></LI>
          <LI class="toclevel-5 tocsection-60"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Via_des_.40Input"><SPAN 
          class="tocnumber">3.14.1.1.2</SPAN> <SPAN class="toctext">Via des 
          @Input</SPAN></A></LI></UL></LI></UL></LI>
      <LI class="toclevel-3 tocsection-61"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Dossier_components"><SPAN 
      class="tocnumber">3.14.2</SPAN> <SPAN class="toctext">Dossier 
      components</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-62"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Dossier_appComponent"><SPAN 
      class="tocnumber">3.14.3</SPAN> <SPAN class="toctext">Dossier 
      appComponent</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-63"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Transclusion"><SPAN 
    class="tocnumber">3.15</SPAN> <SPAN class="toctext">Transclusion</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-64"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ng-content"><SPAN 
      class="tocnumber">3.15.1</SPAN> <SPAN 
      class="toctext">ng-content</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-65"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#transclusion_multiple"><SPAN 
        class="tocnumber">3.15.1.1</SPAN> <SPAN class="toctext">transclusion 
        multiple</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-66"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ng-template"><SPAN 
      class="tocnumber">3.15.2</SPAN> <SPAN 
      class="toctext">ng-template</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-67"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#schematics"><SPAN 
    class="tocnumber">3.16</SPAN> <SPAN 
    class="toctext">schematics</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-68"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Tests"><SPAN 
    class="tocnumber">3.17</SPAN> <SPAN class="toctext">Tests</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-69"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Shadow_DOM"><SPAN 
    class="tocnumber">3.18</SPAN> <SPAN class="toctext">Shadow 
    DOM</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-70"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Observables"><SPAN 
    class="tocnumber">3.19</SPAN> <SPAN class="toctext">Observables</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-71"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Observables_froids"><SPAN 
      class="tocnumber">3.19.1</SPAN> <SPAN class="toctext">Observables 
      froids</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-72"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Observables_chauds"><SPAN 
      class="tocnumber">3.19.2</SPAN> <SPAN class="toctext">Observables 
      chauds</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-73"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#RxJS"><SPAN 
      class="tocnumber">3.19.3</SPAN> <SPAN class="toctext">RxJS</SPAN></A></LI>
      <LI class="toclevel-3 tocsection-74"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Event_Emitter"><SPAN 
      class="tocnumber">3.19.4</SPAN> <SPAN class="toctext">Event 
      Emitter</SPAN></A></LI></UL></LI>
    <LI class="toclevel-2 tocsection-75"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Angular_Forms"><SPAN 
    class="tocnumber">3.20</SPAN> <SPAN class="toctext">Angular Forms</SPAN></A> 
    <UL>
      <LI class="toclevel-3 tocsection-76"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Forms_Angular"><SPAN 
      class="tocnumber">3.20.1</SPAN> <SPAN class="toctext">Forms 
      Angular</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-77"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#abstractControl"><SPAN 
        class="tocnumber">3.20.1.1</SPAN> <SPAN 
        class="toctext">abstractControl</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-78"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#FormGroup"><SPAN 
        class="tocnumber">3.20.1.2</SPAN> <SPAN 
        class="toctext">FormGroup</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-79"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#FormControl"><SPAN 
        class="tocnumber">3.20.1.3</SPAN> <SPAN 
        class="toctext">FormControl</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-80"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Validation"><SPAN 
        class="tocnumber">3.20.1.4</SPAN> <SPAN 
        class="toctext">Validation</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-81"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#ngSubmit"><SPAN 
        class="tocnumber">3.20.1.5</SPAN> <SPAN 
        class="toctext">ngSubmit</SPAN></A></LI>
        <LI class="toclevel-4 tocsection-82"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Exemple"><SPAN 
        class="tocnumber">3.20.1.6</SPAN> <SPAN 
        class="toctext">Exemple</SPAN></A></LI></UL></LI>
      <LI class="toclevel-3 tocsection-83"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Reactive_Forms_Module"><SPAN 
      class="tocnumber">3.20.2</SPAN> <SPAN class="toctext">Reactive Forms 
      Module</SPAN></A> 
      <UL>
        <LI class="toclevel-4 tocsection-84"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Exemple_2"><SPAN 
        class="tocnumber">3.20.2.1</SPAN> <SPAN 
        class="toctext">Exemple</SPAN></A></LI></UL></LI></UL></LI>
    <LI class="toclevel-2 tocsection-85"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Trick_CSS"><SPAN 
    class="tocnumber">3.21</SPAN> <SPAN class="toctext">Trick 
CSS</SPAN></A></LI>
    <LI class="toclevel-2 tocsection-86"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#HttpClientModule_:_appels_HTTP"><SPAN 
    class="tocnumber">3.22</SPAN> <SPAN class="toctext">HttpClientModule&nbsp;: 
    appels HTTP</SPAN></A></LI></UL></LI>
  <LI class="toclevel-1 tocsection-87"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#R.C3.A9f.C3.A9rences"><SPAN 
  class="tocnumber">4</SPAN> <SPAN class="toctext">Références</SPAN></A></LI>
  <LI class="toclevel-1 tocsection-88"><A href="http://10.24.217.233/wiki/index.php/Formation_Angular_6#Style_guide"><SPAN 
  class="tocnumber">5</SPAN> <SPAN class="toctext">Style 
guide</SPAN></A></LI></UL></DIV>
<H1><SPAN class="mw-headline" id="Introduction">Introduction</SPAN></H1>
<P>Concepts usuels mais oubliés en développement Front&nbsp;: </P>
<UL>
  <LI><B>Evolutivité</B></LI>
  <LI> Maintenabilité</LI>
  <LI> Réutilisabilité</LI>
  <LI> Encapsulation</LI>
  <LI> 1 role 1 class</LI></UL>
<P><B>Lourde maintenance Front</B> </P>
<P>à bannir&nbsp;: propriété CSS !important (signe d'un CSS mal architecturé) 
</P>
<P>Ce que propose le framework Angular&nbsp;: </P>
<UL>
  <LI> Objets et encapsulation</LI>
  <LI> Templating IHM</LI>
  <LI> Composants réutilisables</LI>
  <LI> Single page applications</LI></UL>
<P>Résoud les problèmes suivants (avec l'aide des WebComponents et la 
programmation réactive ReactJS) </P>
<UL>
  <LI> Nommage des variables et fonctions JS</LI>
  <LI> Nommage des classes CSS</LI></UL>
<H2><SPAN class="mw-headline" id="WebComponents">WebComponents</SPAN></H2>
<UL>
  <LI> HTML Templates&nbsp;: squelettes HTML à instancier</LI>
  <LI> HTML Import&nbsp;: permet de packager des composants html + css + js et 
  de les intégrer aux pages</LI>
  <LI> Custom elements&nbsp;: balises HTML personnalisées pour importer des 
  templates, etc</LI>
  <LI> Shadow DOM&nbsp;: encapsulation (et imperméabilité) entre les composants 
  et leur html/css/js. Cela permet de ne plus avoir de CSS global. 
  <UL>
    <LI> Shadow émulé&nbsp;:&nbsp;? <A class="external free" href="https://toddmotto.com/emulated-native-shadow-dom-angular-2-view-encapsulation" 
    target="_blank" 
    rel="nofollow noreferrer noopener">https://toddmotto.com/emulated-native-shadow-dom-angular-2-view-encapsulation</A></LI>
    <LI> Shadow DOM natif&nbsp;: nécessite des versions récentes de 
    navigateurs</LI></UL></LI></UL>
<H2><SPAN class="mw-headline" id="ReactiveX">ReactiveX</SPAN></H2>
<P>API pour la programmation asynchrone à l'aide d'observables. Disponible dans 
plusieurs langages. </P>
<P><B>Library&nbsp;:</B> RxJS </P>
<H3><SPAN class="mw-headline" id="Principe_des_observables">Principe des 
observables</SPAN></H3>
<P>Permet de gérer des flux de données de manère asynchrone </P>
<P>Objets <B>Observable</B> (design pattern) </P>
<UL>
  <LI> Définit le comportement pour consommer les données asynchrones</LI>
  <LI> Souscrire à l'Observable permet d'ouvrir une instance, mais ne stocke 
  aucune données</LI>
  <LI> Retourne un flux de données</LI>
  <LI> Très utilisés sur Angular</LI></UL>
<H3><SPAN class="mw-headline" id="Fonctions_principales">Fonctions 
principales</SPAN></H3>
<P><A class="external free" href="https://rxjs-dev.firebaseapp.com/api" target="_blank" 
rel="nofollow noreferrer noopener">https://rxjs-dev.firebaseapp.com/api</A> </P>
<H4><SPAN class="mw-headline" id="obs.create">obs.create</SPAN></H4>
<P>Prend une fonction callback en paramètre (observer) =&gt; { ...&nbsp;;} </P>
<P>observer.next&nbsp;: pousse des données observer.error&nbsp;: récupérer les 
erreurs observer.complet&nbsp;: notifie de la fin de consommation des données 
</P>
<H4><SPAN class="mw-headline" id="obs.from">obs.from</SPAN></H4>
<P>Automatise le create et les fonctions next/error/complete </P>
<H4><SPAN class="mw-headline" id="obs.subscribe">obs.subscribe</SPAN></H4>
<P>Permet de souscrire à son Obs et d'exécuter le code de la fonction callback 
</P>
<P>Arguments (dans l'ordre)&nbsp;: </P>
<UL>
  <LI> callback avec un argument pour récupérer les données et effectuer les 
  traitements</LI>
  <LI> callback avec un argument pour récupérer les erreurs</LI>
  <LI> callback sans args&nbsp;: notification de fin de flux</LI></UL>
<H2><SPAN class="mw-headline" id="Firebase">Firebase</SPAN></H2>
<P><A class="external free" href="https://console.firebase.google.com/" target="_blank" 
rel="nofollow noreferrer noopener">https://console.firebase.google.com/</A> </P>
<P><A class="external free" href="https://github.com/angular/angularfire2" 
target="_blank" 
rel="nofollow noreferrer noopener">https://github.com/angular/angularfire2</A> 
</P>
<H2><SPAN class="mw-headline" id="Compodoc">Compodoc</SPAN></H2>
<P>Permet de générer une documentation du code. <A class="external free" href="https://compodoc.app/" 
target="_blank" rel="nofollow noreferrer noopener">https://compodoc.app/</A> 
</P>
<P>à lancere avec npm run compodoc </P>
<H2><SPAN class="mw-headline" id="Agilit.C3.A9">Agilité</SPAN></H2>
<H3><SPAN class="mw-headline" id="M.C3.A9thode_Agile">Méthode Agile</SPAN></H3>
<P>SCRUM, Daily, etc... Prévoir les sprints, séparer en US dimensionnées </P>
<P>Que se passe-t-il lorsque que des changements sont à apporter en cours de 
dev&nbsp;? "Il faut défaire et refaire" </P>
<P><B> Concept&nbsp;:</B> Evolutivité  </P>
<H3><SPAN class="mw-headline" id="Conception_Agile">Conception Agile</SPAN></H3>
<P>Opposition PC / Apple Permettre de changer les pièces, ne pas "souder" les 
composants&nbsp;: réduire l'adhérence des modules Capitaliser les composants sur 
plusieurs applications </P>
<P><B>Exemple</B> Microservices </P>
<H2><SPAN class="mw-headline" id="ECMA_Script_5">ECMA Script 5</SPAN></H2>
<P>2015 -&gt; ES6 </P>
<P>2016 -&gt; ES7 </P>
<H3><SPAN class="mw-headline" id="Arrow_functions">Arrow functions</SPAN></H3>
<P>Plus de mot clef functions Déclaration d'une fonction&nbsp;: (...) =&gt; { } 
</P>
<H3><SPAN class="mw-headline" id="this">this</SPAN></H3>
<P>Fait référence à la fonction en ES5 N'existe plus en ES6 </P>
<H3><SPAN class="mw-headline" id="let">let</SPAN></H3>
<P>Permet de créer des variables (remplace var) Créer la variable au niveau de 
fonction le plus proche Permet d'avoir des variables locales à un "if" </P>
<H3><SPAN class="mw-headline" id="decorators">decorators</SPAN></H3>
<P>Comme les annotations Java. Définir des metadata, donner des rôles à des 
classes </P>
<P>Angular&nbsp;: @Injectable (service), @Component, ... </P>
<H3><SPAN class="mw-headline" id="spread_operator">spread operator</SPAN></H3>
<P>Décomposer des tableaux ou des objets: fonction "flatten" </P>
<UL>
  <LI> Permet de supporter le "args" de taille indéfinie</LI>
  <LI> Permet de copier des objets JS (= faire un instantané de 
l'objet):</LI></UL>
<P>chris = { user } Explication: """{}""" = nouvel objet, """user""" = tous les 
attributs de mon premier objet </P>
<UL>
  <LI> Permet d’aplatir des tableaux</LI></UL>
<P>tab1 = [ fraise, poire ] tab2 = [ banane, clémentine ] </P>
<P>tab1 + tab2 </P>
<P>Résultat sans spread: [tab1, tab2] Résultat avec&nbsp;: [fraise, poire, 
banane, clémentine] </P>
<H1><SPAN class="mw-headline" id="Poste_de_dev">Poste de dev</SPAN></H1>
<H2><SPAN class="mw-headline" id="Applications_.C3.A0_installer">Applications à 
installer</SPAN></H2>
<UL>
  <LI> Visual Studio Code</LI>
  <LI> NodeJS LTS (8.x ou 10.x)</LI></UL>
<H2><SPAN class="mw-headline" id="Visual_Studio_Code">Visual Studio 
Code</SPAN></H2>
<H3><SPAN class="mw-headline" id="Installation_des_plugins">Installation des 
plugins</SPAN></H3>
<UL>
  <LI><B>Angular Essentials</B></LI>
  <LI><B>AngularDoc</B> permet d'utiliser les schematics via les menus 
  contextuels dans VSCode (clic droit sur les dossiers pax ex)</LI>
  <LI><B>Auto Rename Tag</B></LI>
  <LI><B>Beautify</B> (alt + maj + F)</LI>
  <LI><B>Bracket Pair Colorizer</B></LI>
  <LI><B>Indent-rainbow</B></LI>
  <LI><B>Todo+</B> (créer une checkbox&nbsp;: ctrl + Entree, 
  start/done/etc&nbsp;: alt+S, alt + D, alt + C)</LI>
  <LI><B>Emmet</B> les raccourcis rapides pour coder du html: <A class="external free" 
  href="https://la-cascade.io/une-liste-de-raccourcis-emmet/" target="_blank" 
  rel="nofollow noreferrer noopener">https://la-cascade.io/une-liste-de-raccourcis-emmet/</A></LI></UL>
<H3><SPAN class="mw-headline" id="User_settings">User settings</SPAN></H3>
<P>Fichier user.settings du TP, à installer dans les Settings VS Code: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="p">{</SPAN>
    <SPAN class="nt">"files.autoSave"</SPAN><SPAN class="p">:</SPAN> <SPAN class="s2">"onFocusChange"</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nt">"typescript.updateImportsOnFileMove.enabled"</SPAN><SPAN class="p">:</SPAN> <SPAN class="s2">"always"</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nt">"workbench.iconTheme"</SPAN><SPAN class="p">:</SPAN> <SPAN class="s2">"material-icon-theme"</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nt">"tslint.autoFixOnSave"</SPAN><SPAN class="p">:</SPAN> <SPAN class="kc">true</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Getting_Started">Getting Started</SPAN></H3>
<P><A class="external free" href="https://angular.io/guide/quickstart" target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/quickstart</A> </P>
<H4><SPAN class="mw-headline" id="Angular.2FCLI">Angular/CLI</SPAN></H4>
<P>Config WebPacks pour Angular </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>npm install -g @angular/cli</PRE></DIV>
<P>(si besoin de le mettre à jour, lancer d'abord npm uninstall -g angular/cli 
puis npm cache verify) </P>
<H4><SPAN class="mw-headline" id="ng-Bootstrap">ng-Bootstrap</SPAN></H4>
<P>Permet d'obtenir les styles bootstrap automatiquement adaptés à Angular </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng add @ng-bootstrap/schematics</PRE></DIV>
<P>Attention, modifier packages.json pour donner la version 4.0.0 à 
ng-bootstrap: "@ng-bootstrap/ng-bootstrap": "^4.0.0", </P>
<H1><SPAN class="mw-headline" id="Angular:_les_bases">Angular: les 
bases</SPAN></H1>
<H2><SPAN class="mw-headline" id="Services_Angular">Services Angular</SPAN></H2>
<P>Service qui deviendra automatiquement injectable dans tout le code À partir 
de Angular 6, plus besoin de le déclarer dans app.module dans la liste de 
providers </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng g service [nom du service]</PRE></DIV>
<P>Exemple de service:  </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Injectable</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">Injectable</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">providedIn</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'root'</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">PrestationsService</SPAN> <SPAN class="p">{</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV>
<H2><SPAN class="mw-headline" id="Decorators_2">Decorators</SPAN></H2>
<P>Il existe de multiples Decorators (annotations en javaAngular permettant de 
rajouter des métadonnées aux classes, méthodes et attributs. </P>
<P>Liste exhaustive&nbsp;: <A class="external free" href="https://angular.io/api?type=decorator" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api?type=decorator</A> 
</P>
<H2><SPAN class="mw-headline" id="Enum.C3.A9rations">Enumérations</SPAN></H2>
<P>Pour créer des énums </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng g enum [Nom de l'enum]</PRE></DIV>
<P>Elles n'ont pas besoin d'être déclarées. </P>
<P>Dans le cadre de la formation, une enum a été créée dans le module "shared", 
commun à tout l'applicatif, et qui permet de réduire l'interdépendance des 
modules. </P>
<H2><SPAN class="mw-headline" id="Directives">Directives</SPAN></H2>
<P>En Angular, une directive est une classe qui permettra d'interagir avec le 
DOM et le contenu des pages HTML. Il existe trois sortes de directives&nbsp;: 
</P>
<H3><SPAN class="mw-headline" id="Directives_de_structure">Directives de 
structure</SPAN></H3>
<UL>
  <LI> Boucle for</LI>
  <LI> ng-if</LI></UL>
<P>Reconnaissables à leurs astérisques en Angular 6 </P>
<H3><SPAN class="mw-headline" id="Directives_d.27attribut">Directives 
d'attribut</SPAN></H3>
<P>Permet de relier des données avec les attributs des éléments HTML.  </P>
<P>Exemple (la directive ngClass fait partie de Angular): </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">main</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">ngClass</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"{'close-aside' : header.open === false}"</SPAN><SPAN class="o">&gt;</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Directives_de_component">Directives de 
component</SPAN></H3>
<P>Les Components sont des directives à la seule différence qu'ils possèdent une 
fonctionnalité de templating. On les reconnait à l'annotation "@Component" qui 
les précède. </P>
<P>Ils ne contrôlent qu'un seul template, et représentent le Controller du 
modèle MVC. Les components sont les composantes de base d'une application 
Angular&nbsp;: une application est une arborescence de plusieurs components. 
</P>
<P>Ils permettent de lier des variables sur le template selon deux modes de 
fonctionnement: </P>
<UL>
  <LI> Property binding&nbsp;: variable entre crochets dans le template. Permet 
  de rattacher des données à des attributs</LI>
  <LI> Event binding&nbsp;: variable entre parenthèses dans le template. Permet 
  de rattacher une fonction à un évènement IHM</LI></UL>
<P>Pour créer des modules </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng g module [Nom du module]</PRE></DIV>
<P>Exemple de component: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Component</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="c1">//déclaration</SPAN>
<SPAN class="err">@</SPAN><SPAN class="nx">Component</SPAN><SPAN class="p">({</SPAN>
 <SPAN class="nx">selector</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'app-root'</SPAN><SPAN class="p">,</SPAN>
 <SPAN class="nx">template</SPAN><SPAN class="o">:</SPAN> <SPAN class="sb">`</SPAN>
<SPAN class="sb"> &lt;h1&gt;Mon premier Component&lt;/h1&gt;</SPAN>
<SPAN class="sb"> &lt;p&gt;en action&lt;/p&gt;</SPAN>
<SPAN class="sb"> `</SPAN><SPAN class="p">,</SPAN>
 <SPAN class="nx">styleUrls</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="s1">'./app.component.css'</SPAN><SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">AppComponent</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="c1">//Mes fonctions</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV>
<P>Un composant doit être déclaré dans la liste "declarations" de son module. 
</P>
<P>Les composants disposent d'un cycle de vie&nbsp;: <A class="external free" 
href="https://angular.io/guide/lifecycle-hooks" target="_blank" rel="nofollow noreferrer noopener">https://angular.io/guide/lifecycle-hooks</A>
 Il est possible de se brancher au cycle de vie d'un component pour lancer du 
code lors des changements de cycle de vie, normalement cachés derrière le 
decorator @Component. Pour cela, la fonction voulue et implémenter l'interface 
adéquate. </P>
<P><B>Attention:</B> à cause de la présence de ce cycle de vie, il ne faut 
<B>jamais</B> appeler de fonctions dans les vues HTML, car elles seront appelées 
à chaque étape de mise à jour de la vue, pouvant générer énormément d'appels. Il 
faudra alors créer un pipe qui permettra de n'évaluer que l'objet pipé, et donc 
d'éviter une détection </P>
<P>De plus, les containers sont les seuls à effectuer les deux dernières étapes 
du cycle de vie&nbsp;! ngAfterViewInit() et ngAfterViewChecked() </P>
<H2><SPAN class="mw-headline" id="Routeur_Angular">Routeur Angular</SPAN></H2>
<P><A class="external free" href="https://angular.io/guide/router" target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/router</A> </P>
<P>Permet de demander le chargement de components dans la page, ainsi que les 
modules spécifiques à ces composants. </P>
<P>Il est conseillé de créer un module spécifique pour le routing. </P>
<H3><SPAN class="mw-headline" id="Routing">Routing</SPAN></H3>
<P>Permet de déclarer les URLs de l'application et d'instancier des composants 
dans la directive &lt;router-outlet&gt;&lt;/router-outlet&gt; définie dans l'un 
des composants instanciés (qui doit l'importer. </P>
<P>Dans le html, une déclaration de RouterLink avec en paramètre une chaine 
commançant par / va remplacer l'entièreté de la route. Sans le /, elle sera 
ajoutée derrière (Angular rajoutera le / tout seul) </P>
<P>Exemple&nbsp;: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">NgModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">CommonModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/common'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">RouterModule</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Routes</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Router</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">PreloadAllModules</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/router'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">LoginModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./login/login.module'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">PageLoginComponent</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./login/pages/page-login/page-login.component'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="kr">const</SPAN> <SPAN class="nx">appRoutes</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">Routes</SPAN> <SPAN class="o">=</SPAN> <SPAN class="p">[</SPAN>
  <SPAN class="p">{</SPAN> <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'login'</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">component</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">PageLoginComponent</SPAN> <SPAN class="p">},</SPAN> <SPAN class="c1">//route sans paramètres</SPAN>
  <SPAN class="p">{</SPAN> <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">''</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//route de la page par défaut</SPAN>
    <SPAN class="nx">redirectTo</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'/login'</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//redirection vers une autre page</SPAN>
    <SPAN class="nx">pathMatch</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'full'</SPAN> <SPAN class="c1">//stratégie pour match </SPAN>
  <SPAN class="p">},</SPAN>
  <SPAN class="p">{</SPAN>
    <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'**'</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//attention à toujours garder le path "any" en dernier, car le parcours des routes s’arrête dès qu'il match !</SPAN>
    <SPAN class="nx">loadChildren</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./page-not-found/page-not-found.module#PageNotFoundModule'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="p">}</SPAN>
<SPAN class="p">];</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">CommonModule</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">RouterModule</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">forRoot</SPAN><SPAN class="p">(</SPAN> <SPAN class="c1">//Ne s'utilise qu'une fois pour toute l'application Angular</SPAN>
      <SPAN class="nx">appRoutes</SPAN><SPAN class="p">,</SPAN>
      <SPAN class="p">{</SPAN>
        <SPAN class="nx">enableTracing</SPAN><SPAN class="o">:</SPAN> <SPAN class="kc">false</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">// &lt;-- debugging purposes only</SPAN>
      <SPAN class="p">}</SPAN>
    <SPAN class="p">),</SPAN>
    <SPAN class="nx">LoginModule</SPAN>
  <SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>

<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">RoutingModule</SPAN> <SPAN class="p">{}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Nested_routing">Nested routing</SPAN></H3>
<P>Il est possible de déclarer des sous-arbres de navigation. Par exemple, des 
routes spécifiques aux modules qui vont être chargés, ce qui permettra, si le 
module est réutilisé sur une autre application, d'exporter les routes avec. </P>
<P>On va ainsi déclarer dans notre app routing&nbsp;: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN>  <SPAN class="p">{</SPAN>
    <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'prestations'</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">loadChildren</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./prestations/prestations.module#PrestationsModule'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="p">},</SPAN>
</PRE></DIV>
<P>Pour charger noter module lors de du changement d'url </P>
<P>Dans le module prestations, on va rajouter un module interne qui sera dédié 
au routing&nbsp;: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">PagePrestationsComponent</SPAN><SPAN class="p">],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">PrestationsRoutingModule</SPAN>
  <SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
</PRE></DIV>
<P>Et créer ce module, qui déclare ses routes qui seront ajoutées derrière les 
routes du app routing module: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">NgModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">RouterModule</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Routes</SPAN><SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/router'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">PagePrestationsComponent</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./pages/page-prestations/page-prestations.component'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="kr">const</SPAN> <SPAN class="nx">prestationsRoutes</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">Routes</SPAN> <SPAN class="o">=</SPAN> <SPAN class="p">[</SPAN>
  <SPAN class="p">{</SPAN> <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">''</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">component</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">PagePrestationsComponent</SPAN> <SPAN class="p">}</SPAN>
<SPAN class="p">];</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">RouterModule</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">forChild</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">prestationsRoutes</SPAN><SPAN class="p">)</SPAN>
  <SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">PrestationsRoutingModule</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Retourner_.C3.A0_une_route_parent">Retourner à 
une route parent</SPAN></H3>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN>    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">router</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">navigate</SPAN><SPAN class="p">([</SPAN><SPAN class="s1">'../'</SPAN><SPAN class="p">],</SPAN> <SPAN class="p">{</SPAN><SPAN class="nx">relativeTo</SPAN><SPAN class="o">:</SPAN> <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">activatedRoute</SPAN><SPAN class="p">});</SPAN> <SPAN class="c1">//injecter Router et ActivatedRoute dans le component</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="LazyLoading">LazyLoading</SPAN></H3>
<P><A class="external free" href="https://angular.io/guide/router#lazy-loading-route-configuration" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/router#lazy-loading-route-configuration</A> 
</P>
<P>Permet de ne charger les modules qu'au moment du changement vers une page. 
</P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">const</SPAN> <SPAN class="nx">appRoutes</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">Routes</SPAN> <SPAN class="o">=</SPAN> <SPAN class="p">[</SPAN>
  <SPAN class="p">{</SPAN> <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'login'</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">component</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">PageLoginComponent</SPAN> <SPAN class="p">},</SPAN>
  <SPAN class="p">{</SPAN> <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">''</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">redirectTo</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'/login'</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">pathMatch</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'full'</SPAN>
  <SPAN class="p">},</SPAN>
  <SPAN class="p">{</SPAN>
    <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'prestations'</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">loadChildren</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./prestations/prestations.module#PrestationsModule'</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//LazyLoading : chargement au dernier moment</SPAN>
  <SPAN class="p">},</SPAN>
  <SPAN class="p">{</SPAN>
    <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'clients'</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">loadChildren</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./clients/clients.module#ClientsModule'</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//LazyLoading : chargement au dernier moment</SPAN>
  <SPAN class="p">},</SPAN>
  <SPAN class="p">{</SPAN>
    <SPAN class="nx">path</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'**'</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">loadChildren</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./page-not-found/page-not-found.module#PageNotFoundModule'</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">//LazyLoading : chargement au dernier moment</SPAN>
  <SPAN class="p">}</SPAN>
<SPAN class="p">];</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">CommonModule</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">RouterModule</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">forRoot</SPAN><SPAN class="p">(</SPAN>
      <SPAN class="nx">appRoutes</SPAN><SPAN class="p">,</SPAN>
      <SPAN class="p">{</SPAN>
        <SPAN class="nx">enableTracing</SPAN><SPAN class="o">:</SPAN> <SPAN class="kc">false</SPAN><SPAN class="p">,</SPAN> <SPAN class="c1">// &lt;-- debugging purposes only</SPAN>
      <SPAN class="p">}</SPAN>
    <SPAN class="p">),</SPAN>
    <SPAN class="nx">LoginModule</SPAN>
  <SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>

<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">RoutingModule</SPAN> <SPAN class="p">{}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Preloading">Preloading</SPAN></H3>
<P><A class="external free" href="https://angular.io/guide/router#preloading-background-loading-of-feature-areas" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/router#preloading-background-loading-of-feature-areas</A> 
</P>
<P>Chargement des modules selon une stratégie de chargement automatique. La 
stratégie <I>PreloadAllModules</I> permet de charger tous les modules déjà 
configurés pour le LazyLoading et de les charger dès que plus aucun autre module 
n'est à charger pour la page actuelle, afin qu'ils soient déjà prêts lorsque 
l'utilisateur demandera la page suivante </P>
<P>Exemple: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">CommonModule</SPAN><SPAN class="p">,</SPAN>
    <SPAN class="nx">RouterModule</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">forRoot</SPAN><SPAN class="p">(</SPAN>
      <SPAN class="nx">appRoutes</SPAN><SPAN class="p">,</SPAN>
      <SPAN class="p">{</SPAN>
        <SPAN class="nx">enableTracing</SPAN><SPAN class="o">:</SPAN> <SPAN class="kc">false</SPAN><SPAN class="p">,</SPAN> 
        <SPAN class="nx">preloadingStrategy</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">PreloadAllModules</SPAN> <SPAN class="c1">//Preloading automatique de tous les modules</SPAN>
      <SPAN class="p">}</SPAN>
    <SPAN class="p">),</SPAN>
    <SPAN class="nx">LoginModule</SPAN>
  <SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
</PRE></DIV>
<H2><SPAN class="mw-headline" id="Injector">Injector</SPAN></H2>
<P>Permet d'obtenir des singletons pour les services et collections </P>
<P>Granularité&nbsp;: possibilité de déclarer un service global sur le root, ou 
spécifiquement à des modules </P>
<H2><SPAN class="mw-headline" 
id="Organisation_des_projets_Angular.2FCLI">Organisation des projets 
Angular/CLI</SPAN></H2>
<UL>
  <LI><B>e2e</B> (end to end) 
  <UL>
    <LI><B>src</B>&nbsp;: pour les tests E2E, lancés sur tous les fichiers 
    contenant le mot clef "-spec"</LI>
    <LI> protractor.conf.js Config protractor </LI></UL></LI>
  <LI> node_modules&nbsp;: dépendances NodeJS</LI>
  <LI> package-lock.json&nbsp;: liste des dépendances et de leurs URLs</LI>
  <LI> package.json&nbsp;: dépdendances dans le build et dans le poste de dev 
  (les listes configurant npm-install)</LI>
  <LI> .angulardoc.json&nbsp;: plugin angulardoc</LI>
  <LI> .gitignore&nbsp;: node modules automatiquement exclu</LI>
  <LI> tsling.json&nbsp;: config de tslint pour permettre de voir les erreurs de 
  syntaxe JS dans VSCode</LI>
  <LI> angular.json&nbsp;: configuration de angular/cli, les projets du 
  workspace, les fichiers main, index... Les polyfills (code permettant de 
  rendre l'application compatible avec les contraintes techniques des 
  navigateurs)</LI>
  <LI> src 
  <UL>
    <LI> browserlist&nbsp;: liste des navigateurs qui ne supportent pas 
    angular</LI>
    <LI> index.html&nbsp;: déclaration des doctype, lang, etc. Important: 
    charset, viewport</LI>
    <LI> karma.conf&nbsp;: outil utilisé pour exécuter les tests unitaires 
    (fichiers -spec.ts)</LI>
    <LI> main.ts&nbsp;: fichier chargé de démarrer 
l'application.</LI></UL></LI></UL>
<UL>
  <LI>
  <UL>
    <LI> polyfills.ts&nbsp;: décommenter le nécessaire pour les browsers pour 
    lesquels on doit être compatible.</LI>
    <LI> styles.scss&nbsp;: styles globaux (hors shadow 
dom)&nbsp;:</LI></UL></LI></UL>
<H2><SPAN class="mw-headline" id="Typescript">Typescript</SPAN></H2>
<P>Langage édité par Microsoft pour être utilisé au dessus de Javascript
 Possibilité de faire de l'héritage, d'avoir de l'encapsulation </P>
<P>Visibilités&nbsp;: </P>
<UL>
  <LI> public (default)&nbsp;: visible dans le html et la classes (pas dans les 
  autres composants à cause du shadow dom)</LI>
  <LI> private&nbsp;: visible seulement dans le composant</LI></UL>
<H2><SPAN class="mw-headline" id="Compilation">Compilation</SPAN></H2>
<P>Transformé en JS ES2015/ES2016/ES2017 Puis compilé en ES2005 </P>
<P>Les bibliothèques pour permettre ces étapes:  </P>
<UL>
  <LI> BabelJS</LI></UL>
<H3><SPAN class="mw-headline" id="Limites_de_TS">Limites de TS</SPAN></H3>
<UL>
  <LI> Langage interprété&nbsp;: une fois compilé en JS, plus de typage 
  statique, difficulté à déboguer les erreurs de typage</LI></UL>
<H3><SPAN class="mw-headline" id="Build_et_lancement">Build et 
lancement</SPAN></H3>
<P>Dans le terminal </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng-serve (--open pour ouvrir la page directement)</PRE></DIV>
<H2><SPAN class="mw-headline" id="Modules">Modules</SPAN></H2>
<P>Déclarés avec @NgModule </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">BrowserModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/platform-browser'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">NgModule</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">AppComponent</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./app.component'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">NgModule</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">declarations</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">AppComponent</SPAN>
  <SPAN class="p">],</SPAN>
  <SPAN class="nx">imports</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
    <SPAN class="nx">BrowserModule</SPAN>
  <SPAN class="p">],</SPAN>
  <SPAN class="nx">providers</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[],</SPAN>
  <SPAN class="nx">bootstrap</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">AppComponent</SPAN><SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">AppModule</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>
</PRE></DIV>
<P><BR>Pour créer des modules </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng g module [Nom du module]</PRE></DIV>
<H3><SPAN class="mw-headline" id="declarations">declarations</SPAN></H3>
<P>TODO </P>
<H3><SPAN class="mw-headline" id="imports">imports</SPAN></H3>
<P>TODO </P>
<H3><SPAN class="mw-headline" 
id="providers.2Fproviding">providers/providing</SPAN></H3>
<P>Déclaration des services utilisés par le module. Centralisé dans le service 
avec Providing, ce qui l'ajoutera aux providers lors de la compil. </P>
<H3><SPAN class="mw-headline" id="bootstrap">bootstrap</SPAN></H3>
<P>App.component.ts TODO </P>
<H2><SPAN class="mw-headline" id="Pipe">Pipe</SPAN></H2>
<P><A class="external free" href="https://angular.io/guide/pipes" target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/pipes</A> </P>
<P>Les pipe sont des directives pouvant être chaînées.  Elles sont extrêmement 
utiles pour tout ce qui touche à l'internationalisation (i18n) </P>
<P>Notamment, le pipe keyvalue permet d'itérer avec la directive ngFor pour des 
enums, objets, etc. </P>
<H2><SPAN class="mw-headline" id="Directives_2">Directives</SPAN></H2>
<P>Il est possible de créer des directives personnalisées, qui permettront 
d'interagir sur des élements du dom en fonction de paramètres définis dans le 
html. Ces directives pourront exécuter du code sur toutes les étapes du cycle de 
vie (hormis les deux propres aux components) </P>
<P>Attention à exporter les directives custom en dehors de leur module pour 
pouvoir les utiliser dans d'autres modules: </P>
<PRE> exports: [TotalPipe, TableauComponent, StateDirective]
</PRE>
<P>Le décorator @HostBinding permet de récupérer des attributs de l'élément HTML 
bindé, et de le modifier. <A class="external free" href="https://angular.io/guide/styleguide#hostlistenerhostbinding-decorators-versus-host-metadata" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/guide/styleguide#hostlistenerhostbinding-decorators-versus-host-metadata</A> 
</P>
<P><BR>Exemple&nbsp;: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">tr</SPAN><SPAN class="o">&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">id</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">client</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">nbJours</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">tjmHt</SPAN> <SPAN class="o">|</SPAN> <SPAN class="nx">currency</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'EUR'</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN> <SPAN class="o">|</SPAN> <SPAN class="nx">total</SPAN><SPAN class="o">:</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">tauxTva</SPAN> <SPAN class="o">|</SPAN> <SPAN class="nx">currency</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'EUR'</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN> <SPAN class="o">|</SPAN> <SPAN class="nx">total</SPAN><SPAN class="o">:</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">tauxTva</SPAN> <SPAN class="o">|</SPAN> <SPAN class="nx">currency</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'EUR'</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">status</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">td</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">appState</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"item.state"</SPAN><SPAN class="o">&gt;</SPAN> <SPAN class="c1">// Ma directive custom</SPAN>
    <SPAN class="o">&lt;</SPAN><SPAN class="nx">select</SPAN> <SPAN class="p">(</SPAN><SPAN class="nx">change</SPAN><SPAN class="p">)</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"changeState($event)"</SPAN><SPAN class="o">&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="nx">option</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">value</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"item.status"</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">status</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/option&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="nx">ng</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">container</SPAN> <SPAN class="o">*</SPAN><SPAN class="nx">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"let state of states"</SPAN><SPAN class="o">&gt;</SPAN>
          <SPAN class="o">&lt;</SPAN><SPAN class="nx">option</SPAN> <SPAN class="o">*</SPAN><SPAN class="nx">ngIf</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"item.status !== state"</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">value</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"state"</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">state</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/option&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="err">/ng-container&gt;</SPAN>
    <SPAN class="o">&lt;</SPAN><SPAN class="err">/select&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="err">/td&gt;</SPAN>
<SPAN class="o">&lt;</SPAN><SPAN class="err">/tr&gt;</SPAN>
<SPAN class="o">&lt;</SPAN><SPAN class="nx">syntaxhighlight</SPAN> <SPAN class="nx">lang</SPAN><SPAN class="o">=</SPAN><SPAN class="s1">'js'</SPAN><SPAN class="o">&gt;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Directive</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">HostBinding</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Input</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">OnChanges</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">StatutPrestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'../enums/statut-prestation.enum'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">Directive</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">selector</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'[appState]'</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">StateDirective</SPAN> <SPAN class="kr">implements</SPAN> <SPAN class="nx">OnChanges</SPAN> <SPAN class="p">{</SPAN>

  <SPAN class="err">@</SPAN><SPAN class="nx">Input</SPAN><SPAN class="p">()</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">appState</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">StatutPrestation</SPAN><SPAN class="p">;</SPAN>

  <SPAN class="err">@</SPAN><SPAN class="nx">HostBinding</SPAN><SPAN class="p">(</SPAN><SPAN class="s1">'class'</SPAN><SPAN class="p">)</SPAN> <SPAN class="nx">nomClasse</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">string</SPAN><SPAN class="p">;</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="nx">ngOnChanges</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">nomClasse</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">formatClasse</SPAN><SPAN class="p">(</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">appState</SPAN><SPAN class="p">);</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="kr">private</SPAN> <SPAN class="nx">formatClasse</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">state</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">StatutPrestation</SPAN><SPAN class="p">)</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">string</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="k">return</SPAN> <SPAN class="sb">`state-</SPAN><SPAN class="si">${</SPAN><SPAN class="nx">state</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">normalize</SPAN><SPAN class="p">(</SPAN><SPAN class="s1">'NFD'</SPAN><SPAN class="p">).</SPAN><SPAN class="nx">replace</SPAN><SPAN class="p">(</SPAN><SPAN class="sr">/[\u0300-\u036f\s]/g</SPAN><SPAN class="p">,</SPAN> <SPAN class="s1">''</SPAN><SPAN class="p">).</SPAN><SPAN class="nx">toLowerCase</SPAN><SPAN class="p">()</SPAN><SPAN class="si">}</SPAN><SPAN class="sb">`</SPAN><SPAN class="p">;</SPAN>
  <SPAN class="p">}</SPAN>

<SPAN class="p">}</SPAN>
</PRE></DIV>
<P>&lt;/syntaxhighlight&gt; </P>
<H2><SPAN class="mw-headline" 
id="Gestion_des_chaines_de_charact.C3.A8res">Gestion des chaines de 
charactères</SPAN></H2>
<P>Il est possible d'insérer du code JS dans des chaînes de charactère depuis 
ES6: en utilisant les backticks (alt gr + 7) et en insérant son code entre ${ } 
</P>
<P>Exemple&nbsp;: `ma chaine ${js} une autre chaine`; </P>
<H2><SPAN class="mw-headline" id="Component">Component</SPAN></H2>
<H3><SPAN class="mw-headline" id="Containers">Containers</SPAN></H3>
<P>Les containers sont des composants qui vont insérer des composants dans leur 
page </P>
<P>Il va falloir permettre de binder des variables dans les composants que l'on 
affiche sur ses containers. </P>
<H4><SPAN class="mw-headline" 
id="Passer_des_donn.C3.A9es_entre_components">Passer des données entre 
components</SPAN></H4>
<H5><SPAN class="mw-headline" id="Via_NgClass">Via NgClass</SPAN></H5>
<P><I>directive</I> </P>
<P><A class="external free" href="https://angular.io/api/common/NgClass" target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/common/NgClass</A> 
</P>
<P>Adds and removes CSS classes on an HTML element. </P>
<H5><SPAN class="mw-headline" id="Via_des_.40Input">Via des @Input</SPAN></H5>
<P>Dans le container: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN>      <SPAN class="o">&lt;</SPAN><SPAN class="nx">app</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">prestation</SPAN> <SPAN class="o">*</SPAN><SPAN class="nx">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"let presta of prestations"</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">]</SPAN> <SPAN class="o">=</SPAN> <SPAN class="s2">"presta"</SPAN><SPAN class="o">&gt;</SPAN> <SPAN class="o">&lt;</SPAN><SPAN class="sr">/app-prestation&gt; /</SPAN><SPAN class="o">/</SPAN><SPAN class="nx">insère</SPAN> <SPAN class="nx">la</SPAN> <SPAN class="nx">variable</SPAN> <SPAN class="nx">presta</SPAN> <SPAN class="nx">dans</SPAN> <SPAN class="nx">item</SPAN> <SPAN class="nx">sur</SPAN> <SPAN class="nx">le</SPAN> <SPAN class="nx">component</SPAN> <SPAN class="nx">app</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">prestation</SPAN>
</PRE></DIV>
<P>Dans le composant: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">PrestationComponent</SPAN> <SPAN class="kr">implements</SPAN> <SPAN class="nx">OnInit</SPAN> <SPAN class="p">{</SPAN>

  <SPAN class="err">@</SPAN><SPAN class="nx">Input</SPAN><SPAN class="p">()</SPAN> <SPAN class="nx">item</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">Prestation</SPAN><SPAN class="p">;</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>

  <SPAN class="nx">ngOnInit</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="p">}</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Dossier_components">Dossier 
components</SPAN></H3>
<P>Les composants qui n'insèrent aucun composant </P>
<P>Créer un component&nbsp;: ng g component 
[nom-module]/components/[nom-component </P>
<H3><SPAN class="mw-headline" id="Dossier_appComponent">Dossier 
appComponent</SPAN></H3>
<P>Déclare la balise app-root pour afficher l'application AppComponent Todo </P>
<H2><SPAN class="mw-headline" id="Transclusion">Transclusion</SPAN></H2>
<P>La transclusion permet d'insérer du contenu html, y compris des components, 
dans des composants sous-jacents, qui vont alors les insérer dans leur propre 
contenu html </P>
<H3><SPAN class="mw-headline" id="ng-content">ng-content</SPAN></H3>
<P>Cette directive va permettre de définir la cible du contenu à insérer. </P>
<P>Exemple avec le tableau générique du TP: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">app</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">tableau</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">headers</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"theaders"</SPAN><SPAN class="o">&gt;</SPAN>
  <SPAN class="o">&lt;</SPAN><SPAN class="nx">app</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">prestation</SPAN> <SPAN class="o">*</SPAN><SPAN class="nx">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"let presta of prestations"</SPAN> <SPAN class="p">[</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">]</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"presta"</SPAN><SPAN class="o">&gt;</SPAN> <SPAN class="o">&lt;</SPAN><SPAN class="err">/app-prestation&gt;</SPAN>
<SPAN class="o">&lt;</SPAN><SPAN class="err">/app-tableau&gt;</SPAN>
</PRE></DIV>
<P>Déclaration du ng-content </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">div</SPAN> <SPAN class="kr">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"table-responsive"</SPAN><SPAN class="o">&gt;</SPAN>
    <SPAN class="o">&lt;</SPAN><SPAN class="nx">table</SPAN> <SPAN class="kr">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"table table-hover table-striped"</SPAN><SPAN class="o">&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="nx">thead</SPAN><SPAN class="o">&gt;</SPAN>
        <SPAN class="o">&lt;</SPAN><SPAN class="nx">tr</SPAN><SPAN class="o">&gt;</SPAN>
          <SPAN class="o">&lt;</SPAN><SPAN class="nx">th</SPAN> <SPAN class="o">*</SPAN><SPAN class="nx">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"let item of headers"</SPAN><SPAN class="o">&gt;</SPAN><SPAN class="p">{{</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">}}</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="err">/th&gt;</SPAN>
        <SPAN class="o">&lt;</SPAN><SPAN class="err">/tr&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="err">/thead&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="nx">tbody</SPAN><SPAN class="o">&gt;</SPAN>
        <SPAN class="o">&lt;</SPAN><SPAN class="nx">ng</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">content</SPAN><SPAN class="o">&gt;&lt;</SPAN><SPAN class="err">/ng-content&gt;</SPAN>
      <SPAN class="o">&lt;</SPAN><SPAN class="err">/tbody&gt;</SPAN>
    <SPAN class="o">&lt;</SPAN><SPAN class="err">/table&gt;</SPAN>
<SPAN class="o">&lt;</SPAN><SPAN class="err">/div&gt;</SPAN>
</PRE></DIV>
<H4><SPAN class="mw-headline" id="transclusion_multiple">transclusion 
multiple</SPAN></H4>
<P>À l'aide d'un sélecteur css, il est possible de cibler l'élement html qui 
doit être transcludé: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">ng</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">content</SPAN> <SPAN class="nx">select</SPAN><SPAN class="o">=</SPAN><SPAN class="s2">"element"</SPAN><SPAN class="o">&gt;&lt;</SPAN><SPAN class="nx">ng</SPAN><SPAN class="o">-</SPAN><SPAN class="nx">content</SPAN><SPAN class="o">&gt;</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="ng-template">ng-template</SPAN></H3>
<H2><SPAN class="mw-headline" id="schematics">schematics</SPAN></H2>
<P>Permet de générer du code  </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng g ou ng generate</PRE></DIV>
<UL>
  <LI> appshell</LI>
  <LI> application</LI>
  <LI> class</LI>
  <LI> component</LI>
  <LI> directive</LI>
  <LI> enum</LI>
  <LI> guard (interceptor Java)</LI>
  <LI> interface</LI>
  <LI> library</LI>
  <LI> module</LI>
  <LI> pipe</LI>
  <LI> service</LI>
  <LI> serviceWorker</LI>
  <LI> universal</LI></UL>
<H2><SPAN class="mw-headline" id="Tests">Tests</SPAN></H2>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE>ng test</PRE></DIV>
<H2><SPAN class="mw-headline" id="Shadow_DOM">Shadow DOM</SPAN></H2>
<P>Le shadow DOM permet de </P>
<P>Il est possible de le désactiver, mais c'est à réserver à des cas tels que 
les composants de design partagés (génériques) qui voudront avoir un style 
particulier tout en permettant d'insérer des éléments et le style adéquat 
dedans. </P>
<P>Pour sécuriser ce css, pour qu'il ne soit pas en conflit avec d'autre css 
malgré qu'il soit visible globalement, il va falloir augmenter le poids de ses 
sélecteurs. </P>
<P>Calcul du poids des sélecteurs: </P>
<P><BR></P>
<H2><SPAN class="mw-headline" id="Observables">Observables</SPAN></H2>
<H3><SPAN class="mw-headline" id="Observables_froids">Observables 
froids</SPAN></H3>
<P>L'observable froid donne un instantané du flux de données qu'il expose. C'est 
à dire qu'il faudra resouscrire à l'observable pour avoir une les nouvelles 
données. </P>
<H3><SPAN class="mw-headline" id="Observables_chauds">Observables 
chauds</SPAN></H3>
<P>L'observable chaud est un "feed", il permet d'obtenir les données au fur et à 
mesure qu'elles sont inscrites dans le flux après avoir récupéré celles déjà 
inscrites, de manière asynchrone. </P>
<H3><SPAN class="mw-headline" id="RxJS">RxJS</SPAN></H3>
<P>Sujbectpeut être créé sans prendre de valeur au départ et ne stocke aucune 
données. Behaviour Subject peut prendre une valeur par défaut, et stocke 
toujours la dernière valeur qui lui a été envoyée ReplaySubject conserve tous 
les sujets qui lui ont été donnés AsyncSubject fonctionne de manière similaire 
au subject mais asynchrone </P>
<H3><SPAN class="mw-headline" id="Event_Emitter">Event Emitter</SPAN></H3>
<P><A class="external free" href="https://angular.io/api/core/EventEmitter" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/core/EventEmitter</A> 
</P>
<H2><SPAN class="mw-headline" id="Angular_Forms">Angular Forms</SPAN></H2>
<P>Décorateur @Output Permettra de définir une valeur </P>
<P>&lt;app-form (out) = add()&gt; </P>
<P>La valeur output devra être un observable chaud pour permettre de récupérer 
au fur et à mesure le contenu du formulaire. </P>
<P>Pour cela, on utilisera un Subject de RxJS (ReactJS): il peut être créé sans 
prendre de valeur au départ et ne stocke aucune données. </P>
<P>Exemple: </P>
<P>On utilisera un formulaire Bootstrap: <A class="external free" href="https://getbootstrap.com/docs/4.1/components/forms/" 
target="_blank" 
rel="nofollow noreferrer noopener">https://getbootstrap.com/docs/4.1/components/forms/</A> 
</P>
<H3><SPAN class="mw-headline" id="Forms_Angular">Forms Angular</SPAN></H3>
<P>Ensemble de directives du module "FormsModule" de @angular/forms Ces 
formulaires vont utiliser les directives HTML pour valider les inputs du 
formulaire Attention, ce module nécessite de mettre un attribut name sur tous 
les inputs </P>
<H4><SPAN class="mw-headline" id="abstractControl">abstractControl</SPAN></H4>
<P><A class="external free" href="https://angular.io/api/forms/AbstractControl" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/forms/AbstractControl</A> 
</P>
<UL>
  <LI> setValue: permet de modifier la valeur d'un champ</LI>
  <LI> valide et invalide: true/false pour savoir si l'entrée est valide</LI>
  <LI> enabled: activé ou non (true/false)</LI>
  <LI> errors: listes des erreurs de validation, ou nu</LI>
  <LI> pristine: true tant que le formulaire n'a pas été touché (aucune 
  frappe)</LI>
  <LI> touched et untouched: true/false tant que le focus n'a pas été donné au 
  formulaire</LI>
  <LI> valueChanges: Observable qui permettra de récupérer les valeurs</LI>
  <LI> get: permet de récupérer la valeur d'un formcontrol ou d'un formgroup 
  complet</LI></UL>
<H4><SPAN class="mw-headline" id="FormGroup">FormGroup</SPAN></H4>
<P><A class="external free" href="https://angular.io/api/forms/FormGroup" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/forms/FormGroup</A> 
</P>
<P>Hérite de abstractControl </P>
<P>setValue: permet de modifier la valeur d'un champ valide et invalide: 
true/false pour savoir si l'entrée est valide enabled: activé ou non 
(true/false) errors: listes des erreurs de validation, ou null </P>
<P>Permet de grouper les inputs du formulaire. La directive #form="ngForm" 
permet de créer un formGroup directement sur la balise form sur laquelle il est 
appliqué </P>
<H4><SPAN class="mw-headline" id="FormControl">FormControl</SPAN></H4>
<P><A class="external free" href="https://angular.io/api/forms/FormControl" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/forms/FormControl</A> 
</P>
<P>Hérite de abstractControl aussi. </P>
<P>Two-way data binding: la syntaxe suivante permet de faire à la fois du 
property bindign et event binding sur le même attribut: </P>
<P>[(ngModel)] = "init.typePresta" [(ngModel)] = "init.nbJours" [(ngModel)] = 
"init.tjmHT" ... </P>
<P>Cela permettra de donner une valeur par défaut mais aussi de récupérer la 
donnée mise à jour </P>
<H4><SPAN class="mw-headline" id="Validation">Validation</SPAN></H4>
<P>Les attributs html seront ceux utilisés pour valider les inputs </P>
<P>Si les inputs sont invalides,  </P>
<P>&lt;button [disabled]="form.invalid" </P>
<H4><SPAN class="mw-headline" id="ngSubmit">ngSubmit</SPAN></H4>
<P>(ngSubmit) = "onSubmit()" sur &lt;button submit&gt; Permettra d'appeler une 
fonction sur le component pour lancer les actions lors du clic sur le bouton 
d'envoi du formulaire. </P>
<H4><SPAN class="mw-headline" id="Exemple">Exemple</SPAN></H4>
<P>HTML form: </P>
<P><BR></P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="p">&lt;</SPAN><SPAN class="nt">div</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"container"</SPAN><SPAN class="p">&gt;</SPAN>
  <SPAN class="p">&lt;</SPAN><SPAN class="nt">form</SPAN> <SPAN class="na">novalidate</SPAN> <SPAN class="err">#</SPAN><SPAN class="na">form</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"ngForm"</SPAN> <SPAN class="err">(</SPAN><SPAN class="na">ngSubmit</SPAN><SPAN class="err">)="</SPAN><SPAN class="na">onSubmit</SPAN><SPAN class="err">()"</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;</SPAN><SPAN class="nt">div</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-group"</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"type"</SPAN><SPAN class="p">&gt;</SPAN>Type<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">typePresta</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">required</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"type"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"text"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"type"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN><SPAN class="p">&gt;</SPAN>Client<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">client</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">required</SPAN> <SPAN class="na">min-length</SPAN><SPAN class="o">=</SPAN><SPAN class="s">3</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"text"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN><SPAN class="p">&gt;</SPAN>nbJours<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">nbJours</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN><SPAN class="p">&gt;</SPAN>tjmHt<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">tjmHt</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN><SPAN class="p">&gt;</SPAN>tauxTva<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">tauxTva</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN><SPAN class="p">&gt;</SPAN>status<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">select</SPAN> <SPAN class="na">name</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN> <SPAN class="err">[(</SPAN><SPAN class="na">ngModel</SPAN><SPAN class="err">)]="</SPAN><SPAN class="na">init</SPAN><SPAN class="err">.</SPAN><SPAN class="na">status</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN><SPAN class="p">&gt;</SPAN>
        <SPAN class="p">&lt;</SPAN><SPAN class="nt">option</SPAN> <SPAN class="err">*</SPAN><SPAN class="na">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"let state of states"</SPAN> <SPAN class="err">[</SPAN><SPAN class="na">value</SPAN><SPAN class="err">]="</SPAN><SPAN class="na">state</SPAN><SPAN class="err">"</SPAN><SPAN class="p">&gt;</SPAN>{{state}}<SPAN class="p">&lt;/</SPAN><SPAN class="nt">option</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;/</SPAN><SPAN class="nt">select</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;/</SPAN><SPAN class="nt">div</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;</SPAN><SPAN class="nt">button</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"submit"</SPAN> <SPAN class="err">[</SPAN><SPAN class="na">disabled</SPAN><SPAN class="err">]="</SPAN><SPAN class="na">form</SPAN><SPAN class="err">.</SPAN><SPAN class="na">invalid</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"btn btn-primary"</SPAN><SPAN class="p">&gt;</SPAN>Submit<SPAN class="p">&lt;/</SPAN><SPAN class="nt">button</SPAN><SPAN class="p">&gt;</SPAN>
  <SPAN class="p">&lt;/</SPAN><SPAN class="nt">form</SPAN><SPAN class="p">&gt;</SPAN>
<SPAN class="p">&lt;/</SPAN><SPAN class="nt">div</SPAN><SPAN class="p">&gt;</SPAN>
</PRE></DIV>
<P>Component: </P>
<P><BR></P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Prestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./../../../shared/models/prestation'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Component</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">OnInit</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Output</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">EventEmitter</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">StatutPrestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'src/app/shared/enums/statut-prestation.enum'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">Component</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">selector</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'app-form-prestation'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">templateUrl</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./form-prestation.component.html'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">styleUrls</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="s1">'./form-prestation.component.scss'</SPAN><SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">FormPrestationComponent</SPAN> <SPAN class="kr">implements</SPAN> <SPAN class="nx">OnInit</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">init</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">new</SPAN> <SPAN class="nx">Prestation</SPAN><SPAN class="p">();</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">states</SPAN> <SPAN class="o">=</SPAN> <SPAN class="nb">Object</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">values</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">StatutPrestation</SPAN><SPAN class="p">);</SPAN>

  <SPAN class="err">@</SPAN><SPAN class="nx">Output</SPAN><SPAN class="p">()</SPAN>
  <SPAN class="nx">nItem</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">EventEmitter</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">Prestation</SPAN><SPAN class="o">&gt;</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">new</SPAN> <SPAN class="nx">EventEmitter</SPAN><SPAN class="p">();</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>

  <SPAN class="nx">ngOnInit</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="kr">public</SPAN> <SPAN class="nx">onSubmit</SPAN><SPAN class="p">()</SPAN><SPAN class="o">:</SPAN> <SPAN class="k">void</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">nItem</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">emit</SPAN><SPAN class="p">(</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">);</SPAN>
  <SPAN class="p">}</SPAN>

<SPAN class="p">}</SPAN>
</PRE></DIV>
<P>Et pour récupérer la valeur du formulaire dans la page: </P>
<P><BR></P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="p">&lt;</SPAN><SPAN class="nt">app-form-prestation</SPAN> <SPAN class="err">(</SPAN><SPAN class="na">nItem</SPAN><SPAN class="err">)="</SPAN><SPAN class="na">formSubmit</SPAN><SPAN class="err">($</SPAN><SPAN class="na">event</SPAN><SPAN class="err">)"</SPAN><SPAN class="p">&gt;&lt;/</SPAN><SPAN class="nt">app-form-prestation</SPAN><SPAN class="p">&gt;</SPAN>
</PRE></DIV>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Component</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">OnInit</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Prestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'src/app/shared/models/prestation'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">Component</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">selector</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'app-add-prestation'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">templateUrl</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./add-prestation.component.html'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">styleUrls</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="s1">'./add-prestation.component.scss'</SPAN><SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">AddPrestationComponent</SPAN> <SPAN class="kr">implements</SPAN> <SPAN class="nx">OnInit</SPAN> <SPAN class="p">{</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>

  <SPAN class="nx">ngOnInit</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="kr">public</SPAN> <SPAN class="nx">formSubmit</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">item</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">Prestation</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="nx">console</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">log</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">item</SPAN><SPAN class="p">);</SPAN>
  <SPAN class="p">}</SPAN>

<SPAN class="p">}</SPAN>
</PRE></DIV>
<H3><SPAN class="mw-headline" id="Reactive_Forms_Module">Reactive Forms 
Module</SPAN></H3>
<P><A class="external free" href="https://angular.io/api/forms/ReactiveFormsModule" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/forms/ReactiveFormsModule</A> 
</P>
<P>Permet de coder les éléments du formulaire dynamiquement, directement dans le 
component. </P>
<H4><SPAN class="mw-headline" id="Exemple_2">Exemple</SPAN></H4>
<P>HTML form: </P>
<P><BR></P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="p">&lt;</SPAN><SPAN class="nt">div</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"container"</SPAN><SPAN class="p">&gt;</SPAN>
  <SPAN class="p">&lt;</SPAN><SPAN class="nt">form</SPAN> <SPAN class="na">novalidate</SPAN> <SPAN class="err">(</SPAN><SPAN class="na">ngSubmit</SPAN><SPAN class="err">)="</SPAN><SPAN class="na">onSubmit</SPAN><SPAN class="err">()"</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;</SPAN><SPAN class="nt">div</SPAN> <SPAN class="err">[</SPAN><SPAN class="na">formGroup</SPAN><SPAN class="err">]="</SPAN><SPAN class="na">form</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-group"</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"type"</SPAN><SPAN class="p">&gt;</SPAN>Type<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"typePresta"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"text"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"type"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN><SPAN class="p">&gt;</SPAN>Client<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"text"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"client"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN><SPAN class="p">&gt;</SPAN>nbJours<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"nbJours"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN><SPAN class="p">&gt;</SPAN>tjmHt<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tjmHt"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN><SPAN class="p">&gt;</SPAN>tauxTva<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">input</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"number"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"tauxTva"</SPAN><SPAN class="p">&gt;</SPAN>

      <SPAN class="p">&lt;</SPAN><SPAN class="nt">label</SPAN> <SPAN class="na">for</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN><SPAN class="p">&gt;</SPAN>status<SPAN class="p">&lt;/</SPAN><SPAN class="nt">label</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;</SPAN><SPAN class="nt">select</SPAN> <SPAN class="na">formControlName</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"form-control"</SPAN> <SPAN class="na">id</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"status"</SPAN><SPAN class="p">&gt;</SPAN>
        <SPAN class="p">&lt;</SPAN><SPAN class="nt">option</SPAN> <SPAN class="err">*</SPAN><SPAN class="na">ngFor</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"let state of states"</SPAN> <SPAN class="err">[</SPAN><SPAN class="na">value</SPAN><SPAN class="err">]="</SPAN><SPAN class="na">state</SPAN><SPAN class="err">"</SPAN><SPAN class="p">&gt;</SPAN>{{state}}<SPAN class="p">&lt;/</SPAN><SPAN class="nt">option</SPAN><SPAN class="p">&gt;</SPAN>
      <SPAN class="p">&lt;/</SPAN><SPAN class="nt">select</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;/</SPAN><SPAN class="nt">div</SPAN><SPAN class="p">&gt;</SPAN>
    <SPAN class="p">&lt;</SPAN><SPAN class="nt">button</SPAN> <SPAN class="err">[</SPAN><SPAN class="na">disabled</SPAN><SPAN class="err">]="</SPAN><SPAN class="na">form</SPAN><SPAN class="err">.</SPAN><SPAN class="na">invalid</SPAN><SPAN class="err">"</SPAN> <SPAN class="na">type</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"submit"</SPAN> <SPAN class="na">class</SPAN><SPAN class="o">=</SPAN><SPAN class="s">"btn btn-primary"</SPAN><SPAN class="p">&gt;</SPAN>Submit<SPAN class="p">&lt;/</SPAN><SPAN class="nt">button</SPAN><SPAN class="p">&gt;</SPAN>
  <SPAN class="p">&lt;/</SPAN><SPAN class="nt">form</SPAN><SPAN class="p">&gt;</SPAN>
<SPAN class="p">&lt;/</SPAN><SPAN class="nt">div</SPAN><SPAN class="p">&gt;</SPAN>
</PRE></DIV>
<P>Component: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Prestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'./../../../shared/models/prestation'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">Component</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">OnInit</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Output</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">EventEmitter</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/core'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">StatutPrestation</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'src/app/shared/enums/statut-prestation.enum'</SPAN><SPAN class="p">;</SPAN>
<SPAN class="kr">import</SPAN> <SPAN class="p">{</SPAN> <SPAN class="nx">FormBuilder</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">FormGroup</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Validators</SPAN> <SPAN class="p">}</SPAN> <SPAN class="nx">from</SPAN> <SPAN class="s1">'@angular/forms'</SPAN><SPAN class="p">;</SPAN>

<SPAN class="err">@</SPAN><SPAN class="nx">Component</SPAN><SPAN class="p">({</SPAN>
  <SPAN class="nx">selector</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'app-form-reactive-prestation'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">templateUrl</SPAN><SPAN class="o">:</SPAN> <SPAN class="s1">'./form-reactive-prestation.component.html'</SPAN><SPAN class="p">,</SPAN>
  <SPAN class="nx">styleUrls</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="s1">'./form-reactive-prestation.component.scss'</SPAN><SPAN class="p">]</SPAN>
<SPAN class="p">})</SPAN>
<SPAN class="kr">export</SPAN> <SPAN class="kr">class</SPAN> <SPAN class="nx">FormReactivePrestationComponent</SPAN> <SPAN class="kr">implements</SPAN> <SPAN class="nx">OnInit</SPAN> <SPAN class="p">{</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">init</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">new</SPAN> <SPAN class="nx">Prestation</SPAN><SPAN class="p">();</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">states</SPAN> <SPAN class="o">=</SPAN> <SPAN class="nb">Object</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">values</SPAN><SPAN class="p">(</SPAN><SPAN class="nx">StatutPrestation</SPAN><SPAN class="p">);</SPAN>
  <SPAN class="kr">public</SPAN> <SPAN class="nx">form</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">FormGroup</SPAN><SPAN class="p">;</SPAN>

  <SPAN class="err">@</SPAN><SPAN class="nx">Output</SPAN><SPAN class="p">()</SPAN>
  <SPAN class="nx">nItem</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">EventEmitter</SPAN><SPAN class="o">&lt;</SPAN><SPAN class="nx">Prestation</SPAN><SPAN class="o">&gt;</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">new</SPAN> <SPAN class="nx">EventEmitter</SPAN><SPAN class="p">();</SPAN>

  <SPAN class="nx">constructor</SPAN><SPAN class="p">(</SPAN><SPAN class="kr">private</SPAN> <SPAN class="nx">fb</SPAN><SPAN class="o">:</SPAN> <SPAN class="nx">FormBuilder</SPAN><SPAN class="p">)</SPAN> <SPAN class="p">{</SPAN> <SPAN class="p">}</SPAN>

  <SPAN class="nx">ngOnInit</SPAN><SPAN class="p">()</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">createForm</SPAN><SPAN class="p">();</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="kr">public</SPAN> <SPAN class="nx">onSubmit</SPAN><SPAN class="p">()</SPAN><SPAN class="o">:</SPAN> <SPAN class="k">void</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="nx">console</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">log</SPAN><SPAN class="p">(</SPAN><SPAN class="sb">`FormReactivePrestation - form = </SPAN><SPAN class="si">${</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">form</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">value</SPAN><SPAN class="si">}</SPAN><SPAN class="sb">`</SPAN><SPAN class="p">);</SPAN>
    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">nItem</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">emit</SPAN><SPAN class="p">(</SPAN><SPAN class="k">new</SPAN> <SPAN class="nx">Prestation</SPAN><SPAN class="p">(</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">form</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">value</SPAN><SPAN class="p">));</SPAN>
  <SPAN class="p">}</SPAN>

  <SPAN class="kr">private</SPAN> <SPAN class="nx">createForm</SPAN><SPAN class="p">()</SPAN><SPAN class="o">:</SPAN> <SPAN class="k">void</SPAN> <SPAN class="p">{</SPAN>
    <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">form</SPAN> <SPAN class="o">=</SPAN> <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">fb</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">group</SPAN><SPAN class="p">({</SPAN>
      <SPAN class="nx">typePresta</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
        <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">typePresta</SPAN><SPAN class="p">,</SPAN>
        <SPAN class="nx">Validators</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">required</SPAN>
      <SPAN class="p">],</SPAN>
      <SPAN class="nx">client</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN>
        <SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">client</SPAN><SPAN class="p">,</SPAN>
        <SPAN class="nx">Validators</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">compose</SPAN><SPAN class="p">([</SPAN><SPAN class="nx">Validators</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">required</SPAN><SPAN class="p">,</SPAN> <SPAN class="nx">Validators</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">minLength</SPAN><SPAN class="p">(</SPAN><SPAN class="mi">3</SPAN><SPAN class="p">)])</SPAN>
      <SPAN class="p">],</SPAN>
      <SPAN class="nx">nbJours</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">nbJours</SPAN><SPAN class="p">],</SPAN>
      <SPAN class="nx">tjmHt</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">tjmHt</SPAN><SPAN class="p">],</SPAN>
      <SPAN class="nx">tauxTva</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">tauxTva</SPAN><SPAN class="p">],</SPAN>
      <SPAN class="nx">status</SPAN><SPAN class="o">:</SPAN> <SPAN class="p">[</SPAN><SPAN class="k">this</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">init</SPAN><SPAN class="p">.</SPAN><SPAN class="nx">status</SPAN><SPAN class="p">]</SPAN>
    <SPAN class="p">});</SPAN>
  <SPAN class="p">}</SPAN>
<SPAN class="p">}</SPAN>
</PRE></DIV>
<P>Et pour récupérer la valeur du formulaire dans la page: </P>
<DIV class="mw-highlight mw-content-ltr" dir="ltr">
<PRE><SPAN></SPAN><SPAN class="p">&lt;</SPAN><SPAN class="nt">app-form-reactive-prestation</SPAN> <SPAN class="err">(</SPAN><SPAN class="na">nItem</SPAN><SPAN class="err">)="</SPAN><SPAN class="na">formSubmit</SPAN><SPAN class="err">($</SPAN><SPAN class="na">event</SPAN><SPAN class="err">)"</SPAN><SPAN class="p">&gt;&lt;/</SPAN><SPAN class="nt">app-form-reactive-prestation</SPAN><SPAN class="p">&gt;</SPAN>
</PRE></DIV>
<H2><SPAN class="mw-headline" id="Trick_CSS">Trick CSS</SPAN></H2>
<DL>
  <DD>host-context (propre à Angular)</DD></DL>
<H2><SPAN class="mw-headline" 
id="HttpClientModule_:_appels_HTTP">HttpClientModule&nbsp;: appels 
HTTP</SPAN></H2>
<P><A class="external free" href="https://angular.io/api/common/http/HttpClientModule" 
target="_blank" 
rel="nofollow noreferrer noopener">https://angular.io/api/common/http/HttpClientModule</A> 
</P>
<H1><SPAN class="mw-headline" id="R.C3.A9f.C3.A9rences">Références</SPAN></H1>
<UL>
  <LI> Todd Motto&nbsp;: <A class="external free" href="https://toddmotto.com/" 
  target="_blank" 
  rel="nofollow noreferrer noopener">https://toddmotto.com/</A></LI>
  <LI><A class="external free" href="https://aligator.io/" target="_blank" rel="nofollow noreferrer noopener">https://aligator.io/</A></LI>
  <LI> CodeCraft: <A class="external free" href="https://codecraft.tv/" target="_blank" 
  rel="nofollow noreferrer noopener">https://codecraft.tv/</A></LI>
  <LI> AngularFire</LI></UL>
<H1><SPAN class="mw-headline" id="Style_guide">Style guide</SPAN></H1>
<P>Pas de fonctions dans les templates </P>
<P>Activer changeDetection: ChangeDetectionStrategy.OnPush et remonter les 
observables jusqu'au template </P>
<P>pas de !important dans le CSS </P><!-- 
NewPP limit report
Cached time: 20190226124925
Cache expiry: 86400
Dynamic content: false
CPU time usage: 0.116 seconds
Real time usage: 1.898 seconds
Preprocessor visited node count: 656/1000000
Preprocessor generated node count: 1036/1000000
Post‐expand include size: 0/2097152 bytes
Template argument size: 0/2097152 bytes
Highest expansion depth: 2/40
Expensive parser function count: 0/100
--> <!--
Transclusion expansion time report (%,ms,calls,template)
100.00%    0.000      1 -total
--> 
</DIV><!-- Saved in parser cache with key wiki:pcache:idhash:401-0!canonical and timestamp 20190226124923 and revision id 2261
 --> 
</DIV>
<DIV class="printfooter">Récupérée de «&nbsp;<A dir="ltr" href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;oldid=2261">http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;oldid=2261</A>&nbsp;»</DIV>
<DIV class="visualClear"></DIV></DIV></DIV></DIV>
<DIV id="content-bottom-stuff">
<DIV class="catlinks" id="catlinks" data-mw="interface">
<DIV class="mw-normal-catlinks" id="mw-normal-catlinks"><A title="Spécial:Catégories" 
href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Cat%C3%A9gories">Catégorie</A>&nbsp;: 

<UL>
  <LI><A title="Catégorie:Pages avec des erreurs de coloration syntaxique (page inexistante)" 
  class="new" href="http://10.24.217.233/wiki/index.php?title=Cat%C3%A9gorie:Pages_avec_des_erreurs_de_coloration_syntaxique&amp;action=edit&amp;redlink=1">Pages 
  avec des erreurs de coloration syntaxique</A></LI></UL></DIV></DIV></DIV></DIV>
<DIV id="mw-site-navigation">
<DIV class="mw-portlet" id="p-logo" role="banner"><A title="Visiter la page d’accueil" 
class="mw-wiki-logo" 
href="http://10.24.217.233/wiki/index.php/Accueil"></A></DIV>
<DIV class="sidebar-chunk" id="site-navigation">
<H2><SPAN>Navigation</SPAN>
<DIV class="pokey"></DIV></H2>
<DIV class="sidebar-inner">
<DIV class="mw-portlet" id="p-navigation" role="navigation" aria-labelledby="p-navigation-label">
<H3 id="p-navigation-label" lang="fr" dir="ltr">Navigation</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI id="n-mainpage-description"><A title="Accueil général [z]" accesskey="z" 
  href="http://10.24.217.233/wiki/index.php/Accueil"><SPAN>Accueil</SPAN></A></LI>
  <LI id="n-recentchanges"><A title="Liste des modifications récentes sur le wiki [r]" 
  accesskey="r" href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Modifications_r%C3%A9centes"><SPAN>Modifications 
  récentes</SPAN></A></LI>
  <LI id="n-randompage"><A title="Afficher une page au hasard [x]" accesskey="x" 
  href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Page_au_hasard"><SPAN>Page 
  au hasard</SPAN></A></LI>
  <LI id="n-help"><A title="Accès à l’aide" href="https://www.mediawiki.org/wiki/Special:MyLanguage/Help:Contents" 
  target="_blank"><SPAN>Aide</SPAN></A></LI></UL></DIV></DIV></DIV></DIV>
<DIV class="sidebar-chunk" id="site-tools">
<H2><SPAN>Outils wiki</SPAN>
<DIV class="pokey"></DIV></H2>
<DIV class="sidebar-inner">
<DIV class="mw-portlet" id="p-tb" role="navigation" 
aria-labelledby="p-tb-label">
<H3 id="p-tb-label" lang="fr" dir="ltr">Outils wiki</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI id="t-specialpages"><A title="Liste de toutes les pages spéciales [q]" 
  accesskey="q" href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Pages_sp%C3%A9ciales"><SPAN>Pages 
  spéciales</SPAN></A></LI></UL></DIV></DIV></DIV></DIV></DIV>
<DIV id="mw-related-navigation">
<DIV class="sidebar-chunk" id="page-tools">
<H2><SPAN>Outils de page</SPAN>
<DIV class="pokey"></DIV></H2>
<DIV class="sidebar-inner">
<DIV class="mw-portlet emptyPortlet" id="p-cactions" role="navigation" 
aria-labelledby="p-cactions-label">
<H3 id="p-cactions-label" lang="fr" dir="ltr">Outils de page</H3>
<DIV class="mw-portlet-body">
<UL></UL></DIV></DIV>
<DIV class="mw-portlet emptyPortlet" id="p-userpagetools" role="navigation" 
aria-labelledby="p-userpagetools-label">
<H3 id="p-userpagetools-label" lang="fr" dir="ltr">Outils de la page 
utilisateur</H3>
<DIV class="mw-portlet-body">
<UL></UL></DIV></DIV>
<DIV class="mw-portlet" id="p-pagemisc" role="navigation" aria-labelledby="p-pagemisc-label">
<H3 id="p-pagemisc-label" lang="fr" dir="ltr">Plus</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI id="t-whatlinkshere"><A title="Liste des pages liées qui pointent sur celle-ci [j]" 
  accesskey="j" href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Pages_li%C3%A9es/Formation_Angular_6"><SPAN>Pages 
  liées</SPAN></A></LI>
  <LI id="t-recentchangeslinked"><A title="Liste des modifications récentes des pages appelées par celle-ci [k]" 
  accesskey="k" href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Suivi_des_liens/Formation_Angular_6" 
  rel="nofollow"><SPAN>Suivi des pages liées</SPAN></A></LI>
  <LI id="t-print"><A title="Version imprimable de cette page [p]" accesskey="p" 
  href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;printable=yes" 
  rel="alternate"><SPAN>Version imprimable</SPAN></A></LI>
  <LI id="t-permalink"><A title="Adresse permanente de cette version de la page" 
  href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;oldid=2261"><SPAN>Lien 
  permanent</SPAN></A></LI>
  <LI id="t-info"><A title="Plus d’information sur cette page" href="http://10.24.217.233/wiki/index.php?title=Formation_Angular_6&amp;action=info"><SPAN>Information 
  sur la page</SPAN></A></LI>
  <LI id="t-pagelog"><A href="http://10.24.217.233/wiki/index.php/Sp%C3%A9cial:Journal/Formation_Angular_6"><SPAN>Journaux 
  de page</SPAN></A></LI></UL></DIV></DIV></DIV></DIV>
<DIV class="sidebar-chunk" id="catlinks-sidebar">
<H2><SPAN>Liste des catégories</SPAN>
<DIV class="pokey"></DIV></H2>
<DIV class="sidebar-inner">
<DIV class="mw-normal-catlinks" id="sidebar-normal-catlinks">
<DIV class="mw-portlet" id="p-normal-catlinks" role="navigation" 
aria-labelledby="p-normal-catlinks-label">
<H3 id="p-normal-catlinks-label" lang="fr" dir="ltr">Liste des catégories</H3>
<DIV class="mw-portlet-body">
<UL>
  <LI><A title="Catégorie:Pages avec des erreurs de coloration syntaxique (page inexistante)" 
  class="new" href="http://10.24.217.233/wiki/index.php?title=Cat%C3%A9gorie:Pages_avec_des_erreurs_de_coloration_syntaxique&amp;action=edit&amp;redlink=1">Pages 
  avec des erreurs de coloration 
syntaxique</A></LI></UL></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class="visualClear"></DIV></DIV></DIV>
<DIV class="ts-container" id="mw-footer-container">
<DIV class="ts-inner" id="mw-footer">
<DIV id="footer-bottom" role="contentinfo" lang="fr" dir="ltr">
<DIV class="footer-icons" id="f-poweredbyico"><A href="https://www.capgemini.com/fr-fr/" 
target="_blank"><IMG width="150" alt="Capgemini" src="Formation%20Angular%206%20—%20Wiki%20CNAF_fichiers/capgemini.png" 
srcset="/wiki/resources/assets/capgemini.png 1.5x, /wiki/resources/assets/capgemini.png 2x"></A></DIV>
<UL class="footer-places" id="f-list">
  <LI id="lastmod"> La dernière modification de cette page a été faite le 7 
  décembre 2018 à 15:21.</LI>
  <LI id="privacy"><A title="Wiki CNAF:Politique de confidentialité" href="http://10.24.217.233/wiki/index.php/Wiki_CNAF:Politique_de_confidentialit%C3%A9">Politique 
  de confidentialité</A></LI>
  <LI id="about"><A title="Wiki CNAF:À propos de" href="http://10.24.217.233/wiki/index.php/Wiki_CNAF:%C3%80_propos_de">À 
  propos de Wiki CNAF</A></LI>
  <LI id="disclaimer"><A title="Wiki CNAF:Avertissements généraux" href="http://10.24.217.233/wiki/index.php/Wiki_CNAF:Avertissements_g%C3%A9n%C3%A9raux">Avertissements</A></LI></UL>
<DIV class="visualClear"></DIV></DIV></DIV></DIV></DIV>
<SCRIPT>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgPageParseReport":{"limitreport":{"cputime":"0.116","walltime":"1.898","ppvisitednodes":{"value":656,"limit":1000000},"ppgeneratednodes":{"value":1036,"limit":1000000},"postexpandincludesize":{"value":0,"limit":2097152},"templateargumentsize":{"value":0,"limit":2097152},"expansiondepth":{"value":2,"limit":40},"expensivefunctioncount":{"value":0,"limit":100},"timingprofile":["100.00%    0.000      1 -total"]},"cachereport":{"timestamp":"20190226124925","ttl":86400,"transientcontent":false}}});});</SCRIPT>

<SCRIPT>(window.RLQ=window.RLQ||[]).push(function(){mw.config.set({"wgBackendResponseTime":149});});</SCRIPT>
</BODY></HTML>
